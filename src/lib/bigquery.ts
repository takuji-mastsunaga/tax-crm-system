import { BigQuery } from "@google-cloud/bigquery"; let bigquery: BigQuery | null = null; export function getBigQueryClient() { if (!bigquery) { if (typeof window !== "undefined") { throw new Error("BigQuery should only be used on the server side"); } bigquery = new BigQuery({ projectId: "tax-crm-project", keyFilename: process.env.GOOGLE_APPLICATION_CREDENTIALS || "./service-account-key.json" }); } return bigquery; } export async function getClientAnalytics() { const bigquery = getBigQueryClient(); const query = `SELECT status, COUNT(*) as count FROM \`tax-crm-project.firebase_data.clients_raw_latest\` GROUP BY status ORDER BY count DESC`; try { const [rows] = await bigquery.query(query); return rows; } catch (error) { console.error("BigQuery error:", error); return []; } } export async function getMonthlyStats() { const bigquery = getBigQueryClient(); const query = `SELECT EXTRACT(MONTH FROM contractDate) as month, EXTRACT(YEAR FROM contractDate) as year, COUNT(*) as count FROM \`tax-crm-project.firebase_data.clients_raw_latest\` WHERE contractDate IS NOT NULL GROUP BY year, month ORDER BY year DESC, month DESC LIMIT 12`; try { const [rows] = await bigquery.query(query); return rows; } catch (error) { console.error("BigQuery monthly stats error:", error); return []; } }
